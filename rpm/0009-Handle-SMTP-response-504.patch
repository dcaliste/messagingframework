From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Valerio Valerio <valerio.valerio@jollamobile.com>
Date: Wed, 17 Dec 2014 17:16:45 +0000
Subject: [PATCH] Handle SMTP response 504.

Handle SMTP response 504 and reset auth method if auth from caps is
enabled.
---
 src/libraries/qmfclient/ssosessionmanager.cpp |  2 +-
 .../qmfmessageserver/qmailauthenticator.cpp   |  2 +-
 .../qmfmessageserver/qmailauthenticator.h     |  2 +-
 .../imap/imapauthenticator.cpp                | 50 +++++++++----------
 .../smtp/smtpauthenticator.cpp                | 49 +++++++++---------
 .../messageservices/smtp/smtpclient.cpp       | 28 +++++++++--
 src/plugins/messageservices/smtp/smtpclient.h |  1 +
 7 files changed, 77 insertions(+), 57 deletions(-)

diff --git a/src/libraries/qmfclient/ssosessionmanager.cpp b/src/libraries/qmfclient/ssosessionmanager.cpp
index 2f9092a8..d5232a9e 100644
--- a/src/libraries/qmfclient/ssosessionmanager.cpp
+++ b/src/libraries/qmfclient/ssosessionmanager.cpp
@@ -113,7 +113,7 @@ void SSOSessionManager::cancel()
 
 /*!
     Creates a new SSO identity for the account identified by \a id for
-    the service to \a serviceType with the authentication type \a serviceAuthentication.
+    the service to \a serviceType.
 
     Returns true if the account has one email service enabled and a valid identity stored
     in ths accounts-sso database, otherwise returns false.
diff --git a/src/libraries/qmfmessageserver/qmailauthenticator.cpp b/src/libraries/qmfmessageserver/qmailauthenticator.cpp
index fc11df5b..05d466d8 100644
--- a/src/libraries/qmfmessageserver/qmailauthenticator.cpp
+++ b/src/libraries/qmfmessageserver/qmailauthenticator.cpp
@@ -131,7 +131,7 @@ QByteArray QMailAuthenticator::getAuthentication(const QMailAccountConfiguration
 */
 #ifdef USE_ACCOUNTS_QT
 QByteArray QMailAuthenticator::getResponse(const QMailAccountConfiguration::ServiceConfiguration &svcCfg, const QByteArray &challenge,
-                                           const QMail::SaslMechanism authType, const QString password)
+                                           const QMail::SaslMechanism authType, const QString &password)
 {
     QMailServiceConfiguration configuration(svcCfg);
     if (!configuration.value(QLatin1String("smtpusername")).isEmpty() && authType == QMail::CramMd5Mechanism) {
diff --git a/src/libraries/qmfmessageserver/qmailauthenticator.h b/src/libraries/qmfmessageserver/qmailauthenticator.h
index 3891139d..04ded033 100644
--- a/src/libraries/qmfmessageserver/qmailauthenticator.h
+++ b/src/libraries/qmfmessageserver/qmailauthenticator.h
@@ -46,7 +46,7 @@ public:
     static bool useEncryption(const QMailAccountConfiguration::ServiceConfiguration &svcCfg, const QStringList &capabilities);
     static QByteArray getAuthentication(const QMailAccountConfiguration::ServiceConfiguration &svcCfg, const QStringList &capabilities);
 #ifdef USE_ACCOUNTS_QT
-    static QByteArray getResponse(const QMailAccountConfiguration::ServiceConfiguration &svcCfg, const QByteArray &challenge, const QMail::SaslMechanism authType, const QString password);
+    static QByteArray getResponse(const QMailAccountConfiguration::ServiceConfiguration &svcCfg, const QByteArray &challenge, const QMail::SaslMechanism authType, const QString &password);
 #else
     static QByteArray getResponse(const QMailAccountConfiguration::ServiceConfiguration &svcCfg, const QByteArray &challenge);
 #endif
diff --git a/src/plugins/messageservices/imap/imapauthenticator.cpp b/src/plugins/messageservices/imap/imapauthenticator.cpp
index 38dd4d9f..46de9f49 100644
--- a/src/plugins/messageservices/imap/imapauthenticator.cpp
+++ b/src/plugins/messageservices/imap/imapauthenticator.cpp
@@ -109,6 +109,25 @@ static QMail::SaslMechanism authFromCapabilities(const QStringList &capabilities
     }
 }
 
+static QByteArray authenticationResponses(QList<QByteArray> &authList, const QMail::SaslMechanism &authType, const QMailAccountId &id)
+{
+    QByteArray result;
+    if(!authList.empty()) {
+        result = authList.takeFirst();
+        if (!authList.empty()) {
+            if (authType == QMail::CramMd5Mechanism) {
+                authPassword = QString::fromLatin1(authList.takeFirst());
+                responseAuthType = QMail::CramMd5Mechanism;
+            } else {
+                gResponses[id] = authList;
+            }
+        }
+    } else {
+        qMailLog(IMAP) << "Failed to get authentication for method" << authType << "in account id:" << id;
+    }
+    return result;
+}
+
 
 QByteArray ImapAuthenticator::getAuthentication(const QMailAccountConfiguration::ServiceConfiguration &svcCfg, const QStringList &capabilities, const QMap<QString, QList<QByteArray> > &ssoLogin)
 {
@@ -120,8 +139,7 @@ QByteArray ImapAuthenticator::getAuthentication(const QMailAccountConfiguration:
     // if we don't have auth yet, try to get it from the capabilities
     if (ssoLogin.size() > 1 && authType == QMail::NoMechanism) {
         qMailLog(IMAP) << "Discovering authentication from capabilities for account id:" << id;
-        QMail::SaslMechanism discoveredAuth = authFromCapabilities(capabilities, ssoLogin);
-        authType = discoveredAuth;
+        authType = authFromCapabilities(capabilities, ssoLogin);
         if (authType != QMail::NoMechanism) {
             QMailAccount account(id);
             QMailAccountConfiguration accountConfig(id);
@@ -140,39 +158,19 @@ QByteArray ImapAuthenticator::getAuthentication(const QMailAccountConfiguration:
             if (ssoLogin.size() == 1) {
                 QList<QString> keys = ssoLogin.keys();
                 auth = ssoLogin.value(keys.at(0));
-                result = auth.takeFirst();
-                if (auth.size()) {
-                    // None of the current supported auths uses this
-                    gResponses[id] = auth;
-                }
+                result = authenticationResponses(auth, authType, id);
                 qMailLog(IMAP) << "Using authentication method " << keys.at(0)
                                << " for account id:" << id;
             } else {
                 if (authType == QMail::CramMd5Mechanism) {
                     auth = ssoLogin.value("CRAM-MD5");
-                    if (!auth.empty()) {
-                        result = auth.takeFirst();
-                        authPassword = QString::fromLatin1(auth.takeFirst());
-                        responseAuthType = QMail::CramMd5Mechanism;
-                    } else {
-                        qMailLog(IMAP) << "Failed to get authentication for method CRAM-MD5 in account id:" << id;
-                    }
+                    result = authenticationResponses(auth, authType, id);
                 } else if (authType == QMail::PlainMechanism) {
                     auth = ssoLogin.value("PLAIN");
-                    if (!auth.empty()) {
-                        result = auth.takeFirst();
-                        gResponses[id] = auth;
-                    } else {
-                        qMailLog(IMAP) << "Failed to get authentication for method PLAIN in account id:" << id;
-                    }
+                    result = authenticationResponses(auth, authType, id);
                 } else if (authType == QMail::LoginMechanism) {
                     auth = ssoLogin.value("LOGIN");
-                    if (!auth.empty()) {
-                        result = auth.takeFirst();
-                        gResponses[id] = auth;
-                    } else {
-                        qMailLog(IMAP) << "Failed to get authentication for method LOGIN in account id:" << id;
-                    }
+                    result = authenticationResponses(auth, authType, id);
                 }
             }
         } else {
diff --git a/src/plugins/messageservices/smtp/smtpauthenticator.cpp b/src/plugins/messageservices/smtp/smtpauthenticator.cpp
index 8e57a76f..100bdc27 100644
--- a/src/plugins/messageservices/smtp/smtpauthenticator.cpp
+++ b/src/plugins/messageservices/smtp/smtpauthenticator.cpp
@@ -76,6 +76,25 @@ static SmtpConfiguration::AuthType authFromCapabilities(const QStringList &capab
     }
 }
 
+static QByteArray authenticationResponses(QList<QByteArray> &authList, const SmtpConfiguration::AuthType &authType, const QMailAccountId &id)
+{
+    QByteArray result;
+    if(!authList.empty()) {
+        result = authList.takeFirst();
+        if (!authList.empty()) {
+            if (authType == SmtpConfiguration::Auth_CRAMMD5) {
+                authPassword = QString::fromLatin1(authList.takeFirst());
+                responseAuthType = QMail::CramMd5Mechanism;
+            } else {
+                gResponses[id] = authList;
+            }
+        }
+    } else {
+        qMailLog(SMTP) << "Failed to get authentication for method" << authType << "in account id:" << id;
+    }
+    return result;
+}
+
 QByteArray SmtpAuthenticator::getAuthentication(const QMailAccountConfiguration::ServiceConfiguration &svcCfg, const QStringList &capabilities, const QMap<QString, QList<QByteArray> > &ssoLogin)
 {
     QByteArray result;
@@ -87,8 +106,7 @@ QByteArray SmtpAuthenticator::getAuthentication(const QMailAccountConfiguration:
     if (ssoLogin.size() > 1 && authType == SmtpConfiguration::Auth_NONE
             && smtpCfg.smtpAuthFromCapabilities()) {
         qMailLog(SMTP) << "Discovering authentication from capabilities for account id:" << id;
-        SmtpConfiguration::AuthType discoveredAuth = authFromCapabilities(capabilities, ssoLogin);
-        authType = discoveredAuth;
+        authType = authFromCapabilities(capabilities, ssoLogin);;
         if (authType != SmtpConfiguration::Auth_NONE) {
             QMailAccount account(id);
             QMailAccountConfiguration accountConfig(id);
@@ -108,38 +126,19 @@ QByteArray SmtpAuthenticator::getAuthentication(const QMailAccountConfiguration:
             if (ssoLogin.size() == 1) {
                 QList<QString> keys = ssoLogin.keys();
                 auth = ssoLogin.value(keys.at(0));
-                result = auth.takeFirst();
-                if (auth.size()) {
-                   gResponses[id] = auth;
-                }
+                result = authenticationResponses(auth, authType, id);
                 qMailLog(SMTP) << "Using authentication method " << keys.at(0)
                                << " for account id:" << id;
             } else {
                 if (authType == SmtpConfiguration::Auth_CRAMMD5) {
                     auth = ssoLogin.value("CRAM-MD5");
-                    if (!auth.empty()) {
-                        result = auth.takeFirst();
-                        authPassword = QString::fromLatin1(auth.takeFirst());
-                        responseAuthType = QMail::CramMd5Mechanism;
-                    } else {
-                        qMailLog(SMTP) << "Failed to get authentication for method CRAM-MD5 in account id:" << id;
-                    }
+                    result = authenticationResponses(auth, authType, id);
                 } else if (authType == SmtpConfiguration::Auth_PLAIN) {
                     auth = ssoLogin.value("PLAIN");
-                    if (!auth.empty()) {
-                        result = auth.takeFirst();
-                        gResponses[id] = auth;
-                    } else {
-                        qMailLog(SMTP) << "Failed to get authentication for method PLAIN in account id:" << id;
-                    }
+                    result = authenticationResponses(auth, authType, id);
                 } else if (authType == SmtpConfiguration::Auth_LOGIN) {
                     auth = ssoLogin.value("LOGIN");
-                    if (!auth.empty()) {
-                        result = auth.takeFirst();
-                        gResponses[id] = auth;
-                    } else {
-                        qMailLog(SMTP) << "Failed to get authentication for method LOGIN in account id:" << id;
-                    }
+                    result = authenticationResponses(auth, authType, id);
                 }
             }
         } else {
diff --git a/src/plugins/messageservices/smtp/smtpclient.cpp b/src/plugins/messageservices/smtp/smtpclient.cpp
index 94b67bd3..69705f88 100644
--- a/src/plugins/messageservices/smtp/smtpclient.cpp
+++ b/src/plugins/messageservices/smtp/smtpclient.cpp
@@ -110,6 +110,7 @@ SmtpClient::SmtpClient(QObject* parent)
     , temporaryFile(0)
     , waitingForBytes(0)
     , notUsingAuth(false)
+    , authReset(false)
     , authTimeout(0)
 #ifdef USE_ACCOUNTS_QT
     , ssoSessionManager(0)
@@ -218,6 +219,7 @@ void SmtpClient::newConnection()
     sending = true;
     domainName = QByteArray();
     outstandingResponses = 0;
+    authReset = false;
 
     if (!transport) {
         // Set up the transport
@@ -677,10 +679,30 @@ void SmtpClient::nextAction(const QString &response)
             // We are now authenticated
             status = Authenticated;
             nextAction(QString());
-        } else if (responseCode == 530) {
-            operationFailed(QMailServiceAction::Status::ErrConfiguration, response);
         } else if (responseCode == 504) {
-            // FIX ME: reset method used and try again to authenticated from caps
+            QMailAccountConfiguration::ServiceConfiguration serviceCfg = config.serviceConfiguration("smtp");
+            SmtpConfiguration smtpCfg(serviceCfg);
+            // reset method used and try again to authenticated from caps
+            if (smtpCfg.smtpAuthFromCapabilities() && !authReset) {
+                qMailLog(SMTP) << "Resetting AUTH TYPE";
+                authReset = true;
+                QMailAccountId id(smtpCfg.id());
+                QMailAccount account(id);
+                QMailAccountConfiguration accountConfig(id);
+                QMailAccountConfiguration::ServiceConfiguration serviceConf(accountConfig.serviceConfiguration("smtp"));
+                serviceConf.setValue("authentication", QString::number(QMail::NoMechanism));
+                if (!QMailStore::instance()->updateAccount(&account, &accountConfig)) {
+                    qWarning() << "Unable to update account" << account.id() << "auth type!!!!";
+                    operationFailed(QMailServiceAction::Status::ErrConfiguration, response);
+                }
+                // Restart the authentication process
+                QByteArray ehlo("EHLO " + localName(transport->socket().localAddress()));
+                sendCommand(ehlo);
+                status = Helo;
+            } else {
+                operationFailed(QMailServiceAction::Status::ErrConfiguration, response);
+            }
+        } else if (responseCode == 530) {
             operationFailed(QMailServiceAction::Status::ErrConfiguration, response);
         } else {
 #ifdef USE_ACCOUNTS_QT
diff --git a/src/plugins/messageservices/smtp/smtpclient.h b/src/plugins/messageservices/smtp/smtpclient.h
index 1d635dfb..73517aab 100644
--- a/src/plugins/messageservices/smtp/smtpclient.h
+++ b/src/plugins/messageservices/smtp/smtpclient.h
@@ -168,6 +168,7 @@ private:
 
     QString bufferedResponse;
     bool notUsingAuth;
+    bool authReset;
 
     QTimer *authTimeout;
 
