From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Pekka Vuorela <pekka.vuorela@jolla.com>
Date: Mon, 13 Aug 2018 15:45:24 +0300
Subject: [PATCH] Introduce acceptUntrustedCertificates() configuration.

---
 src/libraries/qmfclient/qmailserviceaction.h  |  2 ++
 .../qmfmessageserver/qmailtransport.cpp       | 29 +++++++++++++++----
 .../qmfmessageserver/qmailtransport.h         |  9 +++++-
 .../imap/imapconfiguration.cpp                | 14 +++++++++
 .../messageservices/imap/imapconfiguration.h  |  5 ++++
 .../messageservices/imap/imapprotocol.cpp     | 10 ++++++-
 .../messageservices/imap/imaptransport.cpp    | 15 ----------
 .../messageservices/imap/imaptransport.h      |  5 ----
 src/plugins/messageservices/pop/popclient.cpp | 16 ++++++++++
 .../messageservices/pop/popconfiguration.cpp  | 13 +++++++++
 .../messageservices/pop/popconfiguration.h    |  5 ++++
 .../messageservices/smtp/smtpclient.cpp       | 10 +++++++
 .../smtp/smtpconfiguration.cpp                | 10 +++++++
 .../messageservices/smtp/smtpconfiguration.h  |  2 ++
 14 files changed, 117 insertions(+), 28 deletions(-)

diff --git a/src/libraries/qmfclient/qmailserviceaction.h b/src/libraries/qmfclient/qmailserviceaction.h
index fcaf44b0..d5031196 100644
--- a/src/libraries/qmfclient/qmailserviceaction.h
+++ b/src/libraries/qmfclient/qmailserviceaction.h
@@ -99,6 +99,8 @@ public:
             ErrInvalidData,
             ErrTimeout,
             ErrInternalStateReset,
+            ErrNoSslSupport,
+            ErrUntrustedCertificates,
             ErrorCodeMaximum = ErrInternalStateReset
         };
 
diff --git a/src/libraries/qmfmessageserver/qmailtransport.cpp b/src/libraries/qmfmessageserver/qmailtransport.cpp
index 87c6201a..fdbfdfa8 100644
--- a/src/libraries/qmfmessageserver/qmailtransport.cpp
+++ b/src/libraries/qmfmessageserver/qmailtransport.cpp
@@ -47,6 +47,7 @@
 
 #include <qmaillog.h>
 #include <qmailnamespace.h>
+#include <qmailserviceaction.h>
 
 #ifndef QT_NO_SSL
 typedef QSslSocket BaseSocketType;
@@ -141,7 +142,8 @@ qint64 QMailTransport::Socket::bytesSinceMark() const
 QMailTransport::QMailTransport(const char* name)
     : mName(name),
       mConnected(false),
-      mInUse(false)
+      mInUse(false),
+      mAcceptUntrustedCertificates(0)
 {
 #ifndef QT_NO_SSL
     encryption = Encrypt_NONE;
@@ -231,14 +233,15 @@ void QMailTransport::createSocket(EncryptType encryptType)
 /*!
     Opens a connection to the supplied \a url and \a port, using the specified \a encryptionType.
 */
-void QMailTransport::open(const QString& url, int port, EncryptType encryptionType)
+void QMailTransport::open(const QString& url, int port, EncryptType encryptionType, bool acceptUntrustedCertificates)
 {
     if (mSocket && mSocket->isOpen())
     {
         qWarning() << "Failed to open connection - already open!";
         return;
     }
-    
+
+    mAcceptUntrustedCertificates = acceptUntrustedCertificates;
     mInUse = true;
 
     const int threeMin = 3 * 60 * 1000;
@@ -400,10 +403,24 @@ void QMailTransport::encryptionEstablished()
 /*! \internal */
 void QMailTransport::connectionFailed(const QList<QSslError>& errors)
 {
-    if (ignoreCertificateErrors(errors))
+    bool sslSupported = ignoreCertificateErrors(errors);
+    if (sslSupported && mAcceptUntrustedCertificates) {
+        qWarning() << "Accepting untrusted certificates";
         mSocket->ignoreSslErrors();
-    else
-        errorHandling(QAbstractSocket::UnknownSocketError, QString());
+    } else {
+        connectToHostTimeOut.stop();
+        mConnected = false;
+        mInUse = false;
+        mSocket->abort();
+
+        emit updateStatus(tr("Error occurred"));
+
+        if (!sslSupported) {
+            emit sslErrorOccured(QMailServiceAction::Status::ErrNoSslSupport, tr("Socket error"));
+        } else {
+            emit sslErrorOccured(QMailServiceAction::Status::ErrUntrustedCertificates, tr("Socket error"));
+        }
+    }
 }
 
 /*! \internal */
diff --git a/src/libraries/qmfmessageserver/qmailtransport.h b/src/libraries/qmfmessageserver/qmailtransport.h
index 3d049d6b..2e463af8 100644
--- a/src/libraries/qmfmessageserver/qmailtransport.h
+++ b/src/libraries/qmfmessageserver/qmailtransport.h
@@ -35,6 +35,9 @@
 #define QMAILTRANSPORT_H
 
 #include <qmailglobal.h>
+#ifndef QT_NO_SSL
+#include <qmailserviceaction.h>
+#endif
 
 #include <QObject>
 #include <QAbstractSocket>
@@ -69,7 +72,7 @@ public:
     virtual ~QMailTransport();
 
     // Open a connection to the specified server
-    void open(const QString& url, int port, EncryptType encryptionType);
+    void open(const QString& url, int port, EncryptType encryptionType, bool acceptUntrustedCertificates = 0);
 
 #ifndef QT_NO_SSL
     // If connection is not currently encrypted, switch to encrypted mode
@@ -108,6 +111,9 @@ Q_SIGNALS:
 
     void errorOccurred(int status, QString);
     void updateStatus(const QString &);
+#ifndef QT_NO_SSL
+    void sslErrorOccured(QMailServiceAction::Status::ErrorCode, QString);
+#endif
 
 public Q_SLOTS:
     void errorHandling(int errorCode, QString msg);
@@ -144,6 +150,7 @@ private:
     QTimer connectToHostTimeOut;
     bool mConnected;
     bool mInUse;
+    bool mAcceptUntrustedCertificates;
 };
 
 #endif
diff --git a/src/plugins/messageservices/imap/imapconfiguration.cpp b/src/plugins/messageservices/imap/imapconfiguration.cpp
index 29ed2622..75009809 100644
--- a/src/plugins/messageservices/imap/imapconfiguration.cpp
+++ b/src/plugins/messageservices/imap/imapconfiguration.cpp
@@ -198,6 +198,15 @@ void ImapConfiguration::setSearchLimit(int limit)
     setValue("searchLimit", QString::number(limit));
 }
 
+#ifndef QT_NO_SSL
+
+bool ImapConfiguration::acceptUntrustedCertificates() const
+{
+    return (value("acceptUntrustedCertificates", "0").toInt() != 0);
+}
+
+#endif
+
 ImapConfigurationEditor::ImapConfigurationEditor(QMailAccountConfiguration *config)
     : ImapConfiguration(*config)
 {
@@ -235,6 +244,11 @@ void ImapConfigurationEditor::setMailAuthentication(int t)
     setValue("authentication", QString::number(t));
 }
 
+void ImapConfigurationEditor::setAcceptUntrustedCertificates(bool v)
+{
+    setValue("acceptUntrustedCertificates", QString::number(v ? 1 : 0));
+}
+
 #endif
 
 void ImapConfigurationEditor::setDeleteMail(bool b)
diff --git a/src/plugins/messageservices/imap/imapconfiguration.h b/src/plugins/messageservices/imap/imapconfiguration.h
index f0c0569a..69dc8ad1 100644
--- a/src/plugins/messageservices/imap/imapconfiguration.h
+++ b/src/plugins/messageservices/imap/imapconfiguration.h
@@ -85,6 +85,10 @@ public:
 
     int searchLimit() const;
     void setSearchLimit(int limit);
+
+#ifndef QT_NO_SSL
+    bool acceptUntrustedCertificates() const;
+#endif
 };
 
 class ImapConfigurationEditor : public ImapConfiguration
@@ -99,6 +103,7 @@ public:
 #ifndef QT_NO_SSL
     void setMailEncryption(int t);
     void setMailAuthentication(int t);
+    void setAcceptUntrustedCertificates(bool v);
 #endif
 
     void setDeleteMail(bool b);
diff --git a/src/plugins/messageservices/imap/imapprotocol.cpp b/src/plugins/messageservices/imap/imapprotocol.cpp
index 010c8e34..8515db8b 100644
--- a/src/plugins/messageservices/imap/imapprotocol.cpp
+++ b/src/plugins/messageservices/imap/imapprotocol.cpp
@@ -3089,10 +3089,18 @@ bool ImapProtocol::open( const ImapConfiguration& config, qint64 bufferSize)
                 this, SLOT(connected(QMailTransport::EncryptType)));
         connect(_transport, SIGNAL(readyRead()),
                 this, SLOT(incomingData()));
+#ifndef QT_NO_SSL
+        connect(_transport, SIGNAL(sslErrorOccured(QMailServiceAction::Status::ErrorCode,QString)),
+                this, SIGNAL(connectionError(QMailServiceAction::Status::ErrorCode,QString)));
+#endif
     }
 
     qMailLog(IMAP) << objectName() << "About to open connection" << config.mailUserName() << config.mailServer(); // useful to see object name
-    _transport->open( config.mailServer(), config.mailPort(), static_cast<QMailTransport::EncryptType>(config.mailEncryption()));
+#ifndef QT_NO_SSL
+    _transport->open(config.mailServer(), config.mailPort(), static_cast<QMailTransport::EncryptType>(config.mailEncryption()), config.acceptUntrustedCertificates());
+#else
+    _transport->open(config.mailServer(), config.mailPort(), static_cast<QMailTransport::EncryptType>(config.mailEncryption()));
+#endif
     if (bufferSize) {
         qMailLog(IMAP) << objectName() << "Setting read buffer size to" << bufferSize;
         _transport->socket().setReadBufferSize(bufferSize);
diff --git a/src/plugins/messageservices/imap/imaptransport.cpp b/src/plugins/messageservices/imap/imaptransport.cpp
index aaa2a97f..7bfbea06 100644
--- a/src/plugins/messageservices/imap/imaptransport.cpp
+++ b/src/plugins/messageservices/imap/imaptransport.cpp
@@ -317,21 +317,6 @@ void ImapTransport::imapClose()
     _compressor = 0;
 }
 
-#ifndef QT_NO_SSL
-bool ImapTransport::ignoreCertificateErrors(const QList<QSslError>& errors)
-{
-    QMailTransport::ignoreCertificateErrors(errors);
-
-    // Because we can't ask the user (due to string freeze), let's default
-    // to ignoring these errors...
-    foreach (const QSslError& error, errors)
-        if (error.error() == QSslError::NoSslSupport)
-            return false;
-
-    return true;
-}
-#endif
-
 void ImapTransport::test()
 {
 #if 0
diff --git a/src/plugins/messageservices/imap/imaptransport.h b/src/plugins/messageservices/imap/imaptransport.h
index a1c50426..50c12e51 100644
--- a/src/plugins/messageservices/imap/imaptransport.h
+++ b/src/plugins/messageservices/imap/imaptransport.h
@@ -68,11 +68,6 @@ public:
 
     void imapClose();
 
-#ifndef QT_NO_SSL
-protected:
-    virtual bool ignoreCertificateErrors(const QList<QSslError>& errors);
-#endif
-
 private:
     void test();
 
diff --git a/src/plugins/messageservices/pop/popclient.cpp b/src/plugins/messageservices/pop/popclient.cpp
index 77801a21..7473198a 100644
--- a/src/plugins/messageservices/pop/popclient.cpp
+++ b/src/plugins/messageservices/pop/popclient.cpp
@@ -113,6 +113,10 @@ void PopClient::createTransport()
         connect(transport, SIGNAL(connected(QMailTransport::EncryptType)), this, SLOT(connected(QMailTransport::EncryptType)));
         connect(transport, SIGNAL(errorOccurred(int,QString)), this, SLOT(transportError(int,QString)));
         connect(transport, SIGNAL(readyRead()), this, SLOT(incomingData()));
+#ifndef QT_NO_SSL
+        connect(transport, SIGNAL(sslErrorOccured(QMailServiceAction::Status::ErrorCode,QString)),
+                this, SIGNAL(connectionError(QMailServiceAction::Status::ErrorCode,QString)));
+#endif
     }
 }
 
@@ -124,6 +128,10 @@ void PopClient::deleteTransport()
         disconnect(transport, SIGNAL(connected(QMailTransport::EncryptType)), this, SLOT(connected(QMailTransport::EncryptType)));
         disconnect(transport, SIGNAL(errorOccurred(int,QString)), this, SLOT(transportError(int,QString)));
         disconnect(transport, SIGNAL(readyRead()), this, SLOT(incomingData()));
+#ifndef QT_NO_SSL
+        disconnect(transport, SIGNAL(sslErrorOccured(QMailServiceAction::Status::ErrorCode,QString)),
+                this, SIGNAL(connectionError(QMailServiceAction::Status::ErrorCode,QString)));
+#endif
 
         // A Qt socket remains in an unusuable state for a short time after closing,
         // thus it can't be immediately reused
@@ -149,7 +157,11 @@ void PopClient::testConnection()
 
     status = Init;
     capabilities.clear();
+#ifndef QT_NO_SSL
+    transport->open(popCfg.mailServer(), popCfg.mailPort(), static_cast<QMailTransport::EncryptType>(popCfg.mailEncryption()), popCfg.acceptUntrustedCertificates());
+#else
     transport->open(popCfg.mailServer(), popCfg.mailPort(), static_cast<QMailTransport::EncryptType>(popCfg.mailEncryption()));
+#endif
 }
 
 void PopClient::newConnection()
@@ -198,7 +210,11 @@ void PopClient::newConnection()
 
         status = Init;
         capabilities.clear();
+#ifndef QT_NO_SSL
+        transport->open(popCfg.mailServer(), popCfg.mailPort(), static_cast<QMailTransport::EncryptType>(popCfg.mailEncryption()), popCfg.acceptUntrustedCertificates());
+#else
         transport->open(popCfg.mailServer(), popCfg.mailPort(), static_cast<QMailTransport::EncryptType>(popCfg.mailEncryption()));
+#endif
     }
 }
 
diff --git a/src/plugins/messageservices/pop/popconfiguration.cpp b/src/plugins/messageservices/pop/popconfiguration.cpp
index b56dba07..5c6754f9 100644
--- a/src/plugins/messageservices/pop/popconfiguration.cpp
+++ b/src/plugins/messageservices/pop/popconfiguration.cpp
@@ -99,6 +99,14 @@ bool PopConfiguration::intervalCheckRoamingEnabled() const
     return (value("intervalCheckRoamingEnabled", "0").toInt() != 0);
 }
 
+#ifndef QT_NO_SSL
+
+bool PopConfiguration::acceptUntrustedCertificates() const
+{
+    return (value("acceptUntrustedCertificates", "0").toInt() != 0);
+}
+
+#endif
 
 PopConfigurationEditor::PopConfigurationEditor(QMailAccountConfiguration *config)
     : PopConfiguration(*config)
@@ -132,6 +140,11 @@ void PopConfigurationEditor::setMailEncryption(int t)
     setValue("encryption", QString::number(t));
 }
 
+void PopConfigurationEditor::setAcceptUntrustedCertificates(bool v)
+{
+    setValue("acceptUntrustedCertificates", QString::number(v ? 1 : 0));
+}
+
 #endif
 
 void PopConfigurationEditor::setDeleteMail(bool b)
diff --git a/src/plugins/messageservices/pop/popconfiguration.h b/src/plugins/messageservices/pop/popconfiguration.h
index 1644faad..fe0119c3 100644
--- a/src/plugins/messageservices/pop/popconfiguration.h
+++ b/src/plugins/messageservices/pop/popconfiguration.h
@@ -67,6 +67,10 @@ public:
 
     int checkInterval() const;
     bool intervalCheckRoamingEnabled() const;
+
+#ifndef QT_NO_SSL
+    bool acceptUntrustedCertificates() const;
+#endif
 };
 
 class PopConfigurationEditor : public PopConfiguration
@@ -80,6 +84,7 @@ public:
     void setMailPort(int i);
 #ifndef QT_NO_SSL
     void setMailEncryption(int t);
+    void setAcceptUntrustedCertificates(bool v);
 #endif
 
     void setDeleteMail(bool b);
diff --git a/src/plugins/messageservices/smtp/smtpclient.cpp b/src/plugins/messageservices/smtp/smtpclient.cpp
index 7eab2081..62018491 100644
--- a/src/plugins/messageservices/smtp/smtpclient.cpp
+++ b/src/plugins/messageservices/smtp/smtpclient.cpp
@@ -207,10 +207,20 @@ void SmtpClient::newConnection()
                 this, SIGNAL(updateStatus(QString)));
         connect(transport, SIGNAL(errorOccurred(int,QString)),
                 this, SLOT(transportError(int,QString)));
+#ifndef QT_NO_SSL
+        connect(transport, SIGNAL(sslErrorOccured(QMailServiceAction::Status::ErrorCode,QString)),
+                this, SIGNAL(connectionError(QMailServiceAction::Status::ErrorCode,QString)));
+#endif
     }
 
     qMailLog(SMTP) << "Open SMTP connection";
+#ifndef QT_NO_SSL
+    transport->open(smtpCfg.smtpServer(), smtpCfg.smtpPort(), static_cast<QMailTransport::EncryptType>(smtpCfg.smtpEncryption()), smtpCfg.acceptUntrustedCertificates());
+#else
     transport->open(smtpCfg.smtpServer(), smtpCfg.smtpPort(), static_cast<QMailTransport::EncryptType>(smtpCfg.smtpEncryption()));
+#endif
+
+
 }
 
 QMailServiceAction::Status::ErrorCode SmtpClient::addMail(const QMailMessage& mail)
diff --git a/src/plugins/messageservices/smtp/smtpconfiguration.cpp b/src/plugins/messageservices/smtp/smtpconfiguration.cpp
index 0c3c3dae..cc30785e 100644
--- a/src/plugins/messageservices/smtp/smtpconfiguration.cpp
+++ b/src/plugins/messageservices/smtp/smtpconfiguration.cpp
@@ -66,6 +66,11 @@ int SmtpConfiguration::smtpPort() const
 
 #ifndef QT_NO_SSL
 
+bool SmtpConfiguration::acceptUntrustedCertificates() const
+{
+    return (value("acceptUntrustedCertificates", "0").toInt() != 0);
+}
+
 QString SmtpConfiguration::smtpUsername() const
 {
     return value("smtpusername");
@@ -121,6 +126,11 @@ void SmtpConfigurationEditor::setSmtpPort(int i)
 
 #ifndef QT_NO_SSL
 
+void SmtpConfigurationEditor::setAcceptUntrustedCertificates(bool v)
+{
+    setValue("acceptUntrustedCertificates", QString::number(v ? 1 : 0));
+}
+
 void SmtpConfigurationEditor::setSmtpUsername(const QString& str)
 {
     setValue("smtpusername", str);
diff --git a/src/plugins/messageservices/smtp/smtpconfiguration.h b/src/plugins/messageservices/smtp/smtpconfiguration.h
index 89eb82c4..7d7e85c6 100644
--- a/src/plugins/messageservices/smtp/smtpconfiguration.h
+++ b/src/plugins/messageservices/smtp/smtpconfiguration.h
@@ -69,6 +69,7 @@ public:
     QString smtpServer() const;
     int smtpPort() const;
 #ifndef QT_NO_SSL
+    bool acceptUntrustedCertificates() const;
     QString smtpUsername() const;
     QString smtpPassword() const;
 #endif
@@ -87,6 +88,7 @@ public:
     void setSmtpServer(const QString &str);
     void setSmtpPort(int i);
 #ifndef QT_NO_SSL
+    void setAcceptUntrustedCertificates(bool v);
     void setSmtpUsername(const QString& username);
     void setSmtpPassword(const QString& password);
     void setSmtpAuthentication(int t);
