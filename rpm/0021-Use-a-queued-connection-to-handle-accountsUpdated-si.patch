From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Chris Adams <chris.adams@jolla.com>
Date: Tue, 19 Jan 2021 16:29:41 +1000
Subject: [PATCH] Use a queued connection to handle accountsUpdated signal

If a socket read results in a change to an accounts' settings (e.g.
available folders) then we need to handle the accountsUpdated signal
asynchronously to avoid deleting the socket out from underneath the
code which caused the database change, otherwise crashes can result
(specifically, in the ImapProtocol::incomingData method).
---
 src/plugins/messageservices/imap/imapclient.cpp  | 3 ++-
 src/plugins/messageservices/imap/imapservice.cpp | 2 +-
 src/plugins/messageservices/pop/popclient.cpp    | 3 ++-
 src/plugins/messageservices/pop/popservice.cpp   | 2 +-
 src/plugins/messageservices/smtp/smtpclient.cpp  | 2 +-
 src/plugins/messageservices/smtp/smtpservice.cpp | 2 +-
 6 files changed, 8 insertions(+), 6 deletions(-)

diff --git a/src/plugins/messageservices/imap/imapclient.cpp b/src/plugins/messageservices/imap/imapclient.cpp
index 92b69402..cdf3f68f 100644
--- a/src/plugins/messageservices/imap/imapclient.cpp
+++ b/src/plugins/messageservices/imap/imapclient.cpp
@@ -505,7 +505,8 @@ ImapClient::ImapClient(QObject* parent)
 
     connect(QMailMessageBuffer::instance(), SIGNAL(flushed()), this, SLOT(messageBufferFlushed()));
 #ifdef USE_ACCOUNTS_QT
-    connect(QMailStore::instance(), SIGNAL(accountsUpdated(QMailAccountIdList)), this, SLOT(onAccountsUpdated(QMailAccountIdList)));
+    connect(QMailStore::instance(), SIGNAL(accountsUpdated(QMailAccountIdList)),
+            this, SLOT(onAccountsUpdated(QMailAccountIdList)), Qt::QueuedConnection);
 #endif
 }
 
diff --git a/src/plugins/messageservices/imap/imapservice.cpp b/src/plugins/messageservices/imap/imapservice.cpp
index c68dd0b4..78094a35 100644
--- a/src/plugins/messageservices/imap/imapservice.cpp
+++ b/src/plugins/messageservices/imap/imapservice.cpp
@@ -1555,7 +1555,7 @@ ImapService::ImapService(const QMailAccountId &accountId)
     }
     connect(_restartPushEmailTimer, SIGNAL(timeout()), this, SLOT(restartPushEmail()));
     connect(QMailStore::instance(), SIGNAL(accountsUpdated(const QMailAccountIdList&)), 
-            this, SLOT(accountsUpdated(const QMailAccountIdList&)));
+            this, SLOT(accountsUpdated(const QMailAccountIdList&)), Qt::QueuedConnection);
     connect(_initiatePushEmailTimer, SIGNAL(timeout()), this, SLOT(initiatePushEmail()));
 
 #ifdef USE_KEEPALIVE
diff --git a/src/plugins/messageservices/pop/popclient.cpp b/src/plugins/messageservices/pop/popclient.cpp
index ca8d9c8a..ce5eb934 100644
--- a/src/plugins/messageservices/pop/popclient.cpp
+++ b/src/plugins/messageservices/pop/popclient.cpp
@@ -87,7 +87,8 @@ PopClient::PopClient(QObject* parent)
     connect(&inactiveTimer, SIGNAL(timeout()), this, SLOT(connectionInactive()));
     connect(QMailMessageBuffer::instance(), SIGNAL(flushed()), this, SLOT(messageBufferFlushed()));
 #ifdef USE_ACCOUNTS_QT
-    connect(QMailStore::instance(), SIGNAL(accountsUpdated(QMailAccountIdList)), this, SLOT(onAccountsUpdated(QMailAccountIdList)));
+    connect(QMailStore::instance(), SIGNAL(accountsUpdated(QMailAccountIdList)),
+            this, SLOT(onAccountsUpdated(QMailAccountIdList)), Qt::QueuedConnection);
 #endif
 }
 
diff --git a/src/plugins/messageservices/pop/popservice.cpp b/src/plugins/messageservices/pop/popservice.cpp
index 7b6492ab..45197adf 100644
--- a/src/plugins/messageservices/pop/popservice.cpp
+++ b/src/plugins/messageservices/pop/popservice.cpp
@@ -341,7 +341,7 @@ PopService::PopService(const QMailAccountId &accountId)
     connect(&_client, SIGNAL(errorOccurred(QMailServiceAction::Status::ErrorCode, QString)), this, SLOT(errorOccurred(QMailServiceAction::Status::ErrorCode, QString)));
     connect(&_client, SIGNAL(updateStatus(QString)), this, SLOT(updateStatus(QString)));
     connect(QMailStore::instance(), SIGNAL(accountsUpdated(const QMailAccountIdList&)), 
-            this, SLOT(accountsUpdated(const QMailAccountIdList&)));
+            this, SLOT(accountsUpdated(const QMailAccountIdList&)), Qt::QueuedConnection);
 
     _client.setAccount(accountId);
     QMailAccountConfiguration accountCfg(accountId);
diff --git a/src/plugins/messageservices/smtp/smtpclient.cpp b/src/plugins/messageservices/smtp/smtpclient.cpp
index 85936dbf..ff985fc7 100644
--- a/src/plugins/messageservices/smtp/smtpclient.cpp
+++ b/src/plugins/messageservices/smtp/smtpclient.cpp
@@ -121,7 +121,7 @@ SmtpClient::SmtpClient(QObject* parent)
 #endif
 {
     connect(QMailStore::instance(), SIGNAL(accountsUpdated(const QMailAccountIdList&)), 
-            this, SLOT(accountsUpdated(const QMailAccountIdList&)));
+            this, SLOT(accountsUpdated(const QMailAccountIdList&)), Qt::QueuedConnection);
 }
 
 SmtpClient::~SmtpClient()
diff --git a/src/plugins/messageservices/smtp/smtpservice.cpp b/src/plugins/messageservices/smtp/smtpservice.cpp
index 8c7ab73f..0eee2b7e 100644
--- a/src/plugins/messageservices/smtp/smtpservice.cpp
+++ b/src/plugins/messageservices/smtp/smtpservice.cpp
@@ -214,7 +214,7 @@ void SmtpService::onCapabilityFetchingActivityChanged(QMailServiceAction::Activi
                            << "Disconnect and reconnect the network connection or"
                            << "update the account to try again";
             connect(QMailStore::instance(), SIGNAL(accountsUpdated(QMailAccountIdList)),
-                    this, SLOT(onAccountsUpdated(QMailAccountIdList)));
+                    this, SLOT(onAccountsUpdated(QMailAccountIdList)), Qt::QueuedConnection);
         }
     }
 }
